param(
    [Parameter(Position=0)]
    [ValidateSet("start", "stop", "restart", "logs", "logs-bot", "logs-mongo", "build", "status", "shell", "mongo-shell", "clean", "clean-db", "help")]
    [string]$Command = "help"
)

function Show-Help {
    Write-Host @"
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\docker.ps1 [–∫–æ–º–∞–Ω–¥–∞]

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
  start       - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ MongoDB –≤ Docker
  stop        - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
  restart     - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
  logs        - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
  logs-bot    - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏ –±–æ—Ç–∞
  logs-mongo  - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏ MongoDB
  build       - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
  status      - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
  shell       - –í–æ–π—Ç–∏ –≤ shell –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –±–æ—Ç–∞
  mongo-shell - –í–æ–π—Ç–∏ –≤ MongoDB shell (mongosh)
  clean       - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å –æ–±—Ä–∞–∑–∞–º–∏
  clean-db    - –û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ)
  help        - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
"@
}

function Start-Bot {
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ MongoDB..." -ForegroundColor Green
    Write-Host "‚ÑπÔ∏è  MongoDB –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –ø–æ—Ä—Ç—É 27017" -ForegroundColor Cyan
    docker compose up -d
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ë–æ—Ç –∏ MongoDB —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã!" -ForegroundColor Green
        Write-Host "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .\docker.ps1 logs" -ForegroundColor Cyan
    }
}

function Stop-Bot {
    Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ –∏ MongoDB..." -ForegroundColor Yellow
    docker compose down
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ë–æ—Ç –∏ MongoDB –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!" -ForegroundColor Green
    }
}

function Restart-Bot {
    Write-Host "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ MongoDB..." -ForegroundColor Yellow
    docker compose restart
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ë–æ—Ç –∏ MongoDB –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!" -ForegroundColor Green
    }
}

function Show-Logs {
    Write-Host "üìã –õ–æ–≥–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):" -ForegroundColor Cyan
    docker compose logs -f --tail=100
}

function Show-BotLogs {
    Write-Host "ü§ñ –õ–æ–≥–∏ –±–æ—Ç–∞ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):" -ForegroundColor Cyan
    docker compose logs -f --tail=100 yui-bot
}

function Show-MongoLogs {
    Write-Host "üçÉ –õ–æ–≥–∏ MongoDB (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):" -ForegroundColor Cyan
    docker compose logs -f --tail=100 mongodb
}

function Build-Image {
    Write-Host "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..." -ForegroundColor Yellow
    docker compose build --no-cache
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω!" -ForegroundColor Green
        Write-Host "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .\docker.ps1 start" -ForegroundColor Cyan
    }
}

function Show-Status {
    Write-Host "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:" -ForegroundColor Cyan
    docker compose ps
}

function Enter-Shell {
    Write-Host "üíª –í—Ö–æ–¥ –≤ shell –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –±–æ—Ç–∞..." -ForegroundColor Cyan
    docker compose exec yui-bot sh
}

function Enter-MongoShell {
    Write-Host "üçÉ –í—Ö–æ–¥ –≤ MongoDB shell..." -ForegroundColor Cyan
    Write-Host "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã MongoDB. –î–ª—è –≤—ã—Ö–æ–¥–∞: exit" -ForegroundColor Yellow
    docker compose exec mongodb mongosh -u admin -p password --authenticationDatabase admin
}

function Clean-All {
    Write-Host "üßπ –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ –æ–±—Ä–∞–∑–æ–≤..." -ForegroundColor Yellow
    docker compose down -v
    docker rmi yui-yui-bot 2>$null
    Write-Host "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
}

function Clean-Database {
    Write-Host "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!" -ForegroundColor Red
    $confirmation = Read-Host "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'yes' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
    
    if ($confirmation -ne "yes") {
        Write-Host "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞" -ForegroundColor Yellow
        return
    }
    
    Write-Host "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Yellow
    
    $mongoStatus = docker compose ps -q mongodb
    if (-not $mongoStatus) {
        Write-Host "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä MongoDB –Ω–µ –∑–∞–ø—É—â–µ–Ω!" -ForegroundColor Red
        Write-Host "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∫–æ–º–∞–Ω–¥–æ–π: .\docker.ps1 start" -ForegroundColor Cyan
        return
    }
    
    docker compose exec -T mongodb mongosh -u admin -p password --authenticationDatabase admin --eval "
        const dbs = db.adminCommand('listDatabases').databases;
        dbs.forEach(database => {
            if (!['admin', 'config', 'local'].includes(database.name)) {
                print('–£–¥–∞–ª–µ–Ω–∏–µ –ë–î: ' + database.name);
                db.getSiblingDB(database.name).dropDatabase();
            }
        });
        print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞!');
    "
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Red
    }
}

if (-not (Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop." -ForegroundColor Red
    exit 1
}

if ($Command -ne "help" -and -not (Test-Path .env)) {
    Write-Host "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Yellow
    Write-Host "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:" -ForegroundColor Cyan
    Write-Host "  cp .env.example .env" -ForegroundColor White
    exit 1
}

switch ($Command) {
    "start"       { Start-Bot }
    "stop"        { Stop-Bot }
    "restart"     { Restart-Bot }
    "logs"        { Show-Logs }
    "logs-bot"    { Show-BotLogs }
    "logs-mongo"  { Show-MongoLogs }
    "build"       { Build-Image }
    "status"      { Show-Status }
    "shell"       { Enter-Shell }
    "mongo-shell" { Enter-MongoShell }
    "clean"       { Clean-All }
    "clean-db"    { Clean-Database }
    "help"        { Show-Help }
    default       { Show-Help }
}
